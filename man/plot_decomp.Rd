% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_decomp.R
\name{plot_decomp}
\alias{plot_decomp}
\title{Plots for score decompositions}
\usage{
plot_decomp(
  terms_un = NULL,
  terms_cnd = NULL,
  title = "",
  waterfall = FALSE,
  dec_places = 1
)
}
\arguments{
\item{terms_un}{vector containing the unconditional decomposition terms.}

\item{terms_cnd}{vector containing the conditional decomposition terms.}

\item{title}{optional title of the plot.}

\item{waterfall}{logical specifying whether a waterfall plot should be used.}

\item{dec_places}{integer specifying how many decimal places should be displayed.}
}
\description{
Plot decompositions of the proper scores into uncertainty, resolution, and
reliability components. A conditional decomposition can also be implemented, which
displays these terms conditional on some events, or states having occurred.
}
\details{
These plot functions take decomposition terms as inputs, and return a plot
containing these values. Two plots are available, a bar plot (default) and a
waterfall plot (\code{waterfall = TRUE}).

Decomposition terms should be inputted using \code{terms_un} and \code{terms_cnd}.
\code{terms_un} contains a vector with the uncertainty, resolution, reliability,
and total score. Note that this must be the ordering of the inputs.
\code{terms_unc} contains a vector with the conditional uncertainty, the resolution
of the states, the resolution of the forecasts given the states, the resolution
of the states given the forecasts, and the reliability of the forecasts given
the states.
These inputs are designed to correspond to the output from \code{\link{bs_decomp}}
and \code{\link{bs_decomp_cond}}.
}
\examples{
o <- rbinom(1000, 1, 0.5)
p <- sample(seq(0, 1, 0.1), 1000, TRUE)

scale <- 10000 # default plot parameters may not be suitable for all scales

# unconditional decomposition
terms_un <- bs_decomp(o = o, p = p)*scale

# conditional decomposition
states = rep(c("G1", "G2"), each = 500)
terms_cnd <- bs_decomp_cond(o = o, p = p, states = states)*scale

# plot decomposition terms

plot_decomp(terms_un)
plot_decomp(terms_un, dec_places = 0)
plot_decomp(terms_un, waterfall = TRUE)
plot_decomp(terms_un, waterfall = TRUE, dec_places = 0)

plot_decomp(terms_cnd = terms_cnd)
plot_decomp(terms_cnd = terms_cnd, waterfall = TRUE)

plot_decomp(terms_un, terms_cnd)
plot_decomp(terms_un, terms_cnd, waterfall = TRUE)

}
\references{
Allen, S., Ferro, C.A.T. and F. Kwasniok (2023): `A conditional decomposition of proper scores: quantifying the sources of information in a forecast'. \emph{Quarterly Journal of the Royal Meteorological Society}
}
\author{
Sam Allen
}
